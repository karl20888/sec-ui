(self["webpackChunkdoc"]=self["webpackChunkdoc"]||[]).push([[8089],{7588:function(e){e.exports='```vue\n<template>\n  <div class="demo-datetime-picker">\n    <div class="block">\n      <span class="demonstration">默认</span>\n      <sec-date-picker\n        v-model="value1"\n        type="datetime"\n        placeholder="选择日期时间"\n      ></sec-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">带快捷选项</span>\n      <sec-date-picker\n        v-model="value2"\n        type="datetime"\n        placeholder="选择日期时间"\n        align="right"\n        :picker-options="pickerOptions"\n      ></sec-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">设置默认时间</span>\n      <sec-date-picker\n        v-model="value3"\n        type="datetime"\n        placeholder="选择日期时间"\n        default-time="12:00:00"\n      ></sec-date-picker>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      pickerOptions: {\n        shortcuts: [{\n          text: \'今天\',\n          onClick(picker) {\n            picker.$emit(\'pick\', new Date());\n          },\n        }, {\n          text: \'昨天\',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\n            picker.$emit(\'pick\', date);\n          },\n        }, {\n          text: \'一周前\',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit(\'pick\', date);\n          },\n        }],\n      },\n      value1: \'\',\n      value2: \'\',\n      value3: \'\',\n    };\n  },\n};\n<\/script>\n\n<style lang="less" scoped>\n.demo-datetime-picker {\n  display: flex;\n\n  .block {\n    flex: 1;\n    padding: 30px 0;\n    text-align: center;\n    border-right: 1px solid #eff2f6;\n\n    &:last-child {\n      border-right: none;\n    }\n  }\n\n  .demonstration {\n    display: block;\n    color: #8492a6;\n    margin-bottom: 20px;\n  }\n}\n</style>\n```'},2620:function(e){e.exports='```vue\n<template>\n  <div class="demo-datetime-picker">\n    <div class="block">\n      <span class="demonstration">默认</span>\n      <sec-date-picker\n        v-model="value1"\n        type="datetimerange"\n        range-separator="至"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期"\n      ></sec-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">带快捷选项</span>\n      <sec-date-picker\n        v-model="value2"\n        type="datetimerange"\n        range-separator="至"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期"\n        align="right"\n        :picker-options="pickerOptions"\n      ></sec-date-picker>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      pickerOptions: {\n        shortcuts: [{\n          text: \'最近一周\',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit(\'pick\', [start, end]);\n          },\n        }, {\n          text: \'最近一个月\',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit(\'pick\', [start, end]);\n          },\n        }, {\n          text: \'最近三个月\',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit(\'pick\', [start, end]);\n          },\n        }],\n      },\n      value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n      value2: \'\',\n    };\n  },\n};\n<\/script>\n\n<style lang="less" scoped>\n.demo-datetime-picker {\n  display: flex;\n\n  .block {\n    flex: 1;\n    padding: 30px 0;\n    border-right: 1px solid #eff2f6;\n    text-align: center;\n\n    &:last-child {\n      border-right: none;\n    }\n  }\n\n  .demonstration {\n    display: block;\n    margin-bottom: 20px;\n    color: #8492a6;\n  }\n}\n</style>\n```'},2439:function(e){e.exports='```vue\n<template>\n  <div class="demo-datetime-picker">\n    <div class="block">\n      <span class="demonstration">起始日期时刻为 12:00:00</span>\n      <sec-date-picker\n        v-model="value1"\n        type="datetimerange"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期"\n        :default-time="[\'12:00:00\']"\n      ></sec-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">起始日期时刻为 12:00:00，结束日期时刻为 00:00:00</span>\n      <sec-date-picker\n        v-model="value2"\n        type="datetimerange"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期"\n        :default-time="[\'12:00:00\', \'08:00:00\']"\n      ></sec-date-picker>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      value1: \'\',\n      value2: \'\',\n    };\n  },\n};\n<\/script>\n\n<style lang="less" scoped>\n.demo-datetime-picker {\n  display: flex;\n\n  .block {\n    flex: 1;\n    padding: 30px 0;\n    border-right: 1px solid #eff2f6;\n    text-align: center;\n\n    &:last-child {\n      border-right: none;\n    }\n  }\n\n  .demonstration {\n    display: block;\n    margin-bottom: 20px;\n    color: #8492a6;\n  }\n}\n</style>\n```'},8089:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return H}});var n=function(){var e=this,t=e._self._c;return t("sec-block",{staticClass:"doc-block"},[t("h2",[e._v("DateTimePicker 日期时间选择器")]),t("p",[e._v("在同一个选择器里选择日期和时间。")]),t("div",{staticClass:"tip"},[t("p",[e._v("DateTimePicker 由 DatePicker 和 TimePicker 派生，"),t("code",[e._v("Picker Options")]),e._v(" 或者其他选项可以参照 DatePicker 和 TimePicker。")])]),t("h3",[e._v("日期和时间点")]),t("DocDemo",{attrs:{markdown:e.demo1},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo1")]},proxy:!0}])},[t("p",[e._v("通过设置 "),t("code",[e._v("type")]),e._v(" 属性为 "),t("code",[e._v("datetime")]),e._v("，即可在同一个选择器里同时进行日期和时间的选择。快捷选项的使用方法与 DatePicker 相同。")])]),t("h3",[e._v("日期和时间范围")]),t("DocDemo",{attrs:{markdown:e.demo2},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo2")]},proxy:!0}])},[t("p",[e._v("设置 "),t("code",[e._v("type")]),e._v(" 为 "),t("code",[e._v("datetimerange")]),e._v(" 即可选择日期和时间范围。")])]),t("h3",[e._v("默认的起始与结束时刻")]),t("DocDemo",{attrs:{markdown:e.demo3},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo3")]},proxy:!0}])},[t("p",[e._v("使用 "),t("code",[e._v("datetimerange")]),e._v(" 进行范围选择时，在日期选择面板中选定起始与结束的日期，默认会使用该日期的 "),t("code",[e._v("00:00:00")]),e._v(" 作为起始与结束的时刻；通过选项 "),t("code",[e._v("default-time")]),e._v(" 可以控制选中起始与结束日期时所使用的具体时刻。"),t("code",[e._v("default-time")]),e._v(" 接受一个数组，数组每项值为字符串，形如 "),t("code",[e._v("12:00:00")]),e._v("，其中第一项控制起始日期的具体时刻，第二项控制结束日期的具体时刻。")])]),t("h3",[e._v("Attributes")]),t("sec-table",{staticClass:"doc-table",attrs:{data:e.attributes}},[t("sec-table-column",{attrs:{label:"参数",prop:"attr",width:"150"}}),t("sec-table-column",{attrs:{label:"说明",prop:"desc"}}),t("sec-table-column",{attrs:{label:"类型",prop:"type",width:"150"}}),t("sec-table-column",{attrs:{label:"可选值",width:"190"},scopedSlots:e._u([{key:"default",fn:function({row:a}){return[t("span",{domProps:{innerHTML:e._s(a.value)}})]}}])}),t("sec-table-column",{attrs:{label:"默认值",prop:"default",width:"180"}})],1),t("h3",[e._v("Picker Options")]),t("sec-table",{staticClass:"doc-table",attrs:{data:e.pickerOptions}},[t("sec-table-column",{attrs:{label:"参数",prop:"attr",width:"150"}}),t("sec-table-column",{attrs:{label:"说明"},scopedSlots:e._u([{key:"default",fn:function({row:a}){return[t("span",{domProps:{innerHTML:e._s(a.desc)}})]}}])}),t("sec-table-column",{attrs:{label:"类型",prop:"type",width:"250"}}),t("sec-table-column",{attrs:{label:"可选值",prop:"value",width:"100"}}),t("sec-table-column",{attrs:{label:"默认值",prop:"default",width:"80"}})],1),t("h3",[e._v("Shortcuts")]),t("sec-table",{staticClass:"doc-table",attrs:{data:e.shortcuts}},[t("sec-table-column",{attrs:{label:"参数",prop:"attr",width:"150"}}),t("sec-table-column",{attrs:{label:"说明",prop:"desc"}}),t("sec-table-column",{attrs:{label:"类型",prop:"type",width:"100"}}),t("sec-table-column",{attrs:{label:"可选值",prop:"value",width:"80"}}),t("sec-table-column",{attrs:{label:"默认值",prop:"default",width:"80"}})],1),t("h3",[e._v("Events")]),t("sec-table",{staticClass:"doc-table",attrs:{data:e.events}},[t("sec-table-column",{attrs:{label:"事件名称",prop:"event",width:"220"}}),t("sec-table-column",{attrs:{label:"说明",prop:"desc"}}),t("sec-table-column",{attrs:{label:"回调参数",width:"450"},scopedSlots:e._u([{key:"default",fn:function({row:a}){return[t("span",{domProps:{innerHTML:e._s(a.param)}})]}}])})],1),t("h3",[e._v("Methods")]),t("sec-table",{staticClass:"doc-table",attrs:{data:e.methods}},[t("sec-table-column",{attrs:{label:"方法名",prop:"method",width:"220"}}),t("sec-table-column",{attrs:{label:"说明",prop:"desc"}}),t("sec-table-column",{attrs:{label:"参数",prop:"param",width:"250"}})],1),t("h3",[e._v("Slots")]),t("sec-table",{staticClass:"doc-table",attrs:{data:e.slots}},[t("sec-table-column",{attrs:{label:"name",prop:"name",width:"220"}}),t("sec-table-column",{attrs:{label:"说明",prop:"desc"}})],1)],1)},s=[],l=a(3722),c=a(7588),r=a.n(c),i=function(){var e=this,t=e._self._c;return t("div",{staticClass:"demo-datetime-picker"},[t("div",{staticClass:"block"},[t("span",{staticClass:"demonstration"},[e._v("默认")]),t("sec-date-picker",{attrs:{type:"datetime",placeholder:"选择日期时间"},model:{value:e.value1,callback:function(t){e.value1=t},expression:"value1"}})],1),t("div",{staticClass:"block"},[t("span",{staticClass:"demonstration"},[e._v("带快捷选项")]),t("sec-date-picker",{attrs:{type:"datetime",placeholder:"选择日期时间",align:"right","picker-options":e.pickerOptions},model:{value:e.value2,callback:function(t){e.value2=t},expression:"value2"}})],1),t("div",{staticClass:"block"},[t("span",{staticClass:"demonstration"},[e._v("设置默认时间")]),t("sec-date-picker",{attrs:{type:"datetime",placeholder:"选择日期时间","default-time":"12:00:00"},model:{value:e.value3,callback:function(t){e.value3=t},expression:"value3"}})],1)])},o=[],d={data(){return{pickerOptions:{shortcuts:[{text:"今天",onClick(e){e.$emit("pick",new Date)}},{text:"昨天",onClick(e){const t=new Date;t.setTime(t.getTime()-864e5),e.$emit("pick",t)}},{text:"一周前",onClick(e){const t=new Date;t.setTime(t.getTime()-6048e5),e.$emit("pick",t)}}]},value1:"",value2:"",value3:""}}},p=d,u=a(4940),m=(0,u.Z)(p,i,o,!1,null,"45deafd2",null),v=m.exports,k=a(2620),f=a.n(k),b=function(){var e=this,t=e._self._c;return t("div",{staticClass:"demo-datetime-picker"},[t("div",{staticClass:"block"},[t("span",{staticClass:"demonstration"},[e._v("默认")]),t("sec-date-picker",{attrs:{type:"datetimerange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期"},model:{value:e.value1,callback:function(t){e.value1=t},expression:"value1"}})],1),t("div",{staticClass:"block"},[t("span",{staticClass:"demonstration"},[e._v("带快捷选项")]),t("sec-date-picker",{attrs:{type:"datetimerange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",align:"right","picker-options":e.pickerOptions},model:{value:e.value2,callback:function(t){e.value2=t},expression:"value2"}})],1)])},h=[],y={data(){return{pickerOptions:{shortcuts:[{text:"最近一周",onClick(e){const t=new Date,a=new Date;a.setTime(a.getTime()-6048e5),e.$emit("pick",[a,t])}},{text:"最近一个月",onClick(e){const t=new Date,a=new Date;a.setTime(a.getTime()-2592e6),e.$emit("pick",[a,t])}},{text:"最近三个月",onClick(e){const t=new Date,a=new Date;a.setTime(a.getTime()-7776e6),e.$emit("pick",[a,t])}}]},value1:[new Date(2e3,10,10,10,10),new Date(2e3,10,11,10,10)],value2:""}}},g=y,_=(0,u.Z)(g,b,h,!1,null,"0106af10",null),x=_.exports,w=a(2439),C=a.n(w),D=function(){var e=this,t=e._self._c;return t("div",{staticClass:"demo-datetime-picker"},[t("div",{staticClass:"block"},[t("span",{staticClass:"demonstration"},[e._v("起始日期时刻为 12:00:00")]),t("sec-date-picker",{attrs:{type:"datetimerange","start-placeholder":"开始日期","end-placeholder":"结束日期","default-time":["12:00:00"]},model:{value:e.value1,callback:function(t){e.value1=t},expression:"value1"}})],1),t("div",{staticClass:"block"},[t("span",{staticClass:"demonstration"},[e._v("起始日期时刻为 12:00:00，结束日期时刻为 00:00:00")]),t("sec-date-picker",{attrs:{type:"datetimerange","start-placeholder":"开始日期","end-placeholder":"结束日期","default-time":["12:00:00","08:00:00"]},model:{value:e.value2,callback:function(t){e.value2=t},expression:"value2"}})],1)])},T=[],O={data(){return{value1:"",value2:""}}},P=O,$=(0,u.Z)(P,D,T,!1,null,"eed4a608",null),S=$.exports,E={components:{DocDemo:l.Z,Demo1:v,Demo2:x,Demo3:S},data(){return{demo1:r(),demo2:f(),demo3:C(),attributes:[{attr:"value / v-model",desc:"绑定值",type:"date(TimePicker) / string(TimeSelect)",value:"—",default:"—"},{attr:"readonly",desc:"完全只读",type:"boolean",value:"—",default:"false"},{attr:"disabled",desc:"禁用",type:"boolean",value:"—",default:"false"},{attr:"editable",desc:"文本框可输入",type:"boolean",value:"—",default:"true"},{attr:"clearable",desc:"是否显示清除按钮",type:"boolean",value:"—",default:"true"},{attr:"size",desc:"输入框尺寸",type:"string",value:"large / medium / small / mini",default:"small"},{attr:"placeholder",desc:"非范围选择时的占位内容",type:"string",value:"—",default:"—"},{attr:"start-placeholder",desc:"范围选择时开始日期的占位内容",type:"string",value:"—",default:"—"},{attr:"end-placeholder",desc:"范围选择时结束日期的占位内容",type:"string",value:"—",default:"—"},{attr:"time-arrow-control",desc:"是否使用箭头进行时间选择",type:"boolean",value:"—",default:"false"},{attr:"type",desc:"显示类型",type:"string",value:"year / month / date / dates / week / datetime / datetimerange / daterange",default:"date"},{attr:"format",desc:"显示在输入框中的格式",type:"string",value:'见 <a href="/#/components/date-picker#ri-qi-ge-shi">日期格式</a>',default:"yyyy-MM-dd HH:mm:ss"},{attr:"align",desc:"对齐方式",type:"string",value:"left / center / right",default:"left"},{attr:"popper-class",desc:"DateTimePicker  下拉框的类名",type:"string",value:"—",default:"—"},{attr:"picker-options",desc:"当前时间日期选择器特有的选项参考下表",type:"object",value:"—",default:"{}"},{attr:"range-separator",desc:"选择范围时的分隔符",type:"string",value:"—",default:"'-'"},{attr:"default-value",desc:"可选，选择器打开时默认显示的时间",type:"Date",value:"可被 <code>new Date()</code> 解析",default:"—"},{attr:"default-time",desc:"选中日期后的默认具体时刻",type:"非范围选择时：string / 范围选择时：string[]",value:"非范围选择时：形如 <code>12:00:00</code> 的字符串；范围选择时：数组，长度为 2，每项值为字符串，形如 <code>12:00:00</code>，第一项指定开始日期的时刻，第二项指定结束日期的时刻。不指定会使用时刻 <code>00:00:00</code>",default:"—"},{attr:"value-format",desc:"可选，绑定值的格式。不指定则绑定值为 Date 对象",type:"string",value:'见 <a href="/#/components/date-picker#ri-qi-ge-shi">日期格式</a>',default:"—"},{attr:"name",desc:"原生属性",type:"string",value:"—",default:"—"},{attr:"unlink-panels",desc:"在范围选择器里取消两个日期面板之间的联动",type:"boolean",value:"—",default:"false"},{attr:"prefix-icon",desc:"自定义头部图标的类名",type:"string",value:"—",default:"el-icon-time"},{attr:"clear-icon",desc:"自定义清空图标的类名",type:"string",value:"—",default:"el-icon-circle-close"}],pickerOptions:[{attr:"shortcuts",desc:"设置快捷选项，需要传入 { text, onClick } 对象用法参考 demo 或下表",type:"Object[]",value:"—",default:"—"},{attr:"disabledDate",desc:"设置禁用状态，参数为当前日期，要求返回 Boolean",type:"Function",value:"—",default:"—"},{attr:"cellClassName",desc:"设置日期的 className",type:"Function(Date)",value:"—",default:"—"},{attr:"firstDayOfWeek",desc:"周起始日",type:"Number",value:"1 到 7",default:"7"}],shortcuts:[{attr:"text",desc:"标题文本",type:"string",value:"—",default:"—"},{attr:"onClick",desc:"选中后的回调函数，参数是 vm，可通过触发 'pick' 事件设置选择器的值。例如 vm.$emit('pick', new Date())",type:"function",value:"—",default:"—"}],events:[{event:"change",desc:"用户确认选定的值时触发",param:"组件绑定值。格式与绑定值一致，可受 <code>value-format</code> 控制"},{event:"blur",desc:"当 input 失去焦点时触发",param:"组件实例"},{event:"focus",desc:"当 input 获得焦点时触发",param:"组件实例"}],methods:[{method:"focus",desc:"使 input 获取焦点",param:"—"}],slots:[{name:"range-separator",desc:"自定义分隔符"}]}}},Z=E,M=(0,u.Z)(Z,n,s,!1,null,null,null),H=M.exports},3722:function(e,t,a){"use strict";a.d(t,{Z:function(){return o}});var n=function(){var e=this,t=e._self._c;return t("div",{staticClass:"doc-demo"},[t("div",{staticClass:"doc-demo-source"},[e._t("source")],2),t("div",{staticClass:"doc-demo-meta",class:{"is-expanded":e.isExpanded}},[e.$slots.default?t("div",{staticClass:"doc-demo-desc"},[e._t("default")],2):e._e(),t("markdown-it-vue",{attrs:{content:e.markdown}})],1),t("div",{staticClass:"doc-demo-control",on:{click:function(t){e.isExpanded=!e.isExpanded},keydown:function(t){e.isExpanded=!e.isExpanded}}},[e.isExpanded?t("i",{staticClass:"el-icon-caret-top"}):t("i",{staticClass:"el-icon-caret-bottom"}),t("span",[e.isExpanded?[e._v("隐藏代码")]:[e._v("显示代码")]],2)])])},s=[],l={props:{markdown:{type:String,default:""}},data(){return{isExpanded:!1}}},c=l,r=a(4940),i=(0,r.Z)(c,n,s,!1,null,null,null),o=i.exports}}]);
//# sourceMappingURL=8089.d4c6dc8c.js.map