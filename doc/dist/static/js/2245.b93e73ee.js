(self["webpackChunkdoc"]=self["webpackChunkdoc"]||[]).push([[2245],{8436:function(e){e.exports="```vue\n<template>\n  <sec-btn type=\"text\" @click=\"open\">点击打开 Message Box</sec-btn>\n</template>\n\n<script>\nexport default {\n  methods: {\n    open() {\n      this.$alert('这是一段内容', '标题名称', {\n        callback: (action) => {\n          this.$message.info(`action: ${action}`);\n        },\n      });\n    },\n  },\n};\n<\/script>\n```"},9884:function(e){e.exports="```vue\n<template>\n  <sec-btn type=\"text\" @click=\"open\">点击打开 Message Box</sec-btn>\n</template>\n\n<script>\nexport default {\n  methods: {\n    open() {\n      this.$confirm('此操作将永久删除该文件，是否继续？', '提示', {\n        type: 'warning',\n      }).then(() => {\n        this.$message.success('删除成功');\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n  },\n};\n<\/script>\n```"},62:function(e){e.exports="```vue\n<template>\n  <sec-btn type=\"text\" @click=\"open\">点击打开 Message Box</sec-btn>\n</template>\n\n<script>\nexport default {\n  methods: {\n    open() {\n      this.$prompt('请输入邮箱', '提示', {\n        inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        inputErrorMessage: '邮箱格式不正确',\n      }).then(({ value }) => {\n        this.$message.success(`你的邮箱是：${value}`);\n      }).catch(() => {\n        this.$message.info('取消输入');\n      });\n    },\n  },\n};\n<\/script>\n```"},6798:function(e){e.exports="```vue\n<template>\n  <sec-btn type=\"text\" @click=\"open\">点击打开 Message Box</sec-btn>\n</template>\n\n<script>\n/* eslint-disable no-param-reassign */\n\nexport default {\n  methods: {\n    open() {\n      const h = this.$createElement;\n      this.$msgbox({\n        title: '消息',\n        message: h('p', null, [\n          h('span', null, '内容可以是 '),\n          h('i', { style: 'color: teal' }, 'VNode'),\n        ]),\n        showCancelButton: true,\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true;\n            instance.confirmButtonText = '执行中...';\n            setTimeout(() => {\n              done();\n              setTimeout(() => {\n                instance.confirmButtonLoading = false;\n              }, 300);\n            }, 3000);\n          } else {\n            done();\n          }\n        },\n      }).then((action) => {\n        this.$message.info(`action: ${action}`);\n      }).catch(() => {});\n    },\n  },\n};\n<\/script>\n```"},194:function(e){e.exports="```vue\n<template>\n  <sec-btn type=\"text\" @click=\"open\">点击打开 Message Box</sec-btn>\n</template>\n\n<script>\nexport default {\n  methods: {\n    open() {\n      this.$alert('<strong>这是 <i>HTML</i> 片段</strong>', 'HTML 片段', {\n        dangerouslyUseHTMLString: true,\n      });\n    },\n  },\n};\n<\/script>\n```"},6536:function(e){e.exports="```vue\n<template>\n  <sec-btn type=\"text\" @click=\"open\">点击打开 Message Box</sec-btn>\n</template>\n\n<script>\nexport default {\n  methods: {\n    open() {\n      this.$confirm('检测到未保存的内容，是否在离开页面前保存修改？', '确认信息', {\n        distinguishCancelAndClose: true,\n        confirmButtonText: '保存',\n        cancelButtonText: '放弃修改',\n      }).then(() => {\n        this.$message.info('保存修改');\n      }).catch((action) => {\n        this.$message.info(action === 'cancel' ? '放弃保存并离开页面' : '停留在当前页面');\n      });\n    },\n  },\n};\n<\/script>\n```"},7586:function(e){e.exports="```vue\n<template>\n  <sec-btn type=\"text\" @click=\"open\">点击打开 Message Box</sec-btn>\n</template>\n\n<script>\nexport default {\n  methods: {\n    open() {\n      this.$confirm('此操作将永久删除该文件，是否继续？', '提示', {\n        type: 'warning',\n        center: true,\n      }).then(() => {\n        this.$message.success('删除成功');\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n  },\n};\n<\/script>\n```"},3722:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var s=function(){var e=this,t=e._self._c;return t("div",{staticClass:"doc-demo"},[t("div",{staticClass:"doc-demo-source"},[e._t("source")],2),t("div",{staticClass:"doc-demo-meta",class:{"is-expanded":e.isExpanded}},[e.$slots.default?t("div",{staticClass:"doc-demo-desc"},[e._t("default")],2):e._e(),t("markdown-it-vue",{attrs:{content:e.markdown}})],1),t("div",{staticClass:"doc-demo-control",on:{click:function(t){e.isExpanded=!e.isExpanded},keydown:function(t){e.isExpanded=!e.isExpanded}}},[e.isExpanded?t("i",{staticClass:"el-icon-caret-top"}):t("i",{staticClass:"el-icon-caret-bottom"}),t("span",[e.isExpanded?[e._v("隐藏代码")]:[e._v("显示代码")]],2)])])},o=[],a={props:{markdown:{type:String,default:""}},data(){return{isExpanded:!1}}},c=a,l=n(4940),r=(0,l.Z)(c,s,o,!1,null,null,null),i=r.exports},2245:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return pe}});var s=function(){var e=this,t=e._self._c;return t("sec-block",{staticClass:"doc-block"},[t("h2",[e._v("MessageBox 弹框")]),t("p",[e._v("模拟系统的消息提示框而实现的一套模态对话框组件，用于消息提示、确认消息和提交内容。")]),t("div",{staticClass:"tip"},[t("p",[e._v("从场景上说，MessageBox 的作用是美化系统自带的 "),t("code",[e._v("alert")]),e._v("、"),t("code",[e._v("confirm")]),e._v(" 和 "),t("code",[e._v("prompt")]),e._v("，因此适合展示较为简单的内容。如果需要弹出较为复杂的内容，请使用 Dialog。")])]),t("h3",[e._v("消息提示")]),t("p",[e._v("当用户进行操作时会被触发，该对话框中断用户操作，直到用户确认知晓后才可关闭。")]),t("DocDemo",{attrs:{markdown:e.demo1},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo1")]},proxy:!0}])},[t("p",[e._v("调用 "),t("code",[e._v("$alert")]),e._v(" 方法即可打开消息提示，它模拟了系统的 "),t("code",[e._v("alert")]),e._v("，无法通过按下 ESC 或点击框外关闭。此例中接收了两个参数，"),t("code",[e._v("message")]),e._v(" 和 "),t("code",[e._v("title")]),e._v("。值得一提的是，窗口被关闭后，它默认会返回一个 "),t("code",[e._v("Promise")]),e._v(" 对象便于进行后续操作的处理。若不确定浏览器是否支持 "),t("code",[e._v("Promise")]),e._v("，可自行引入第三方 polyfill 或像本例一样使用回调进行后续处理。")])]),t("h3",[e._v("确认消息")]),t("p",[e._v("提示用户确认其已经触发的动作，并询问是否进行此操作时会用到此对话框。")]),t("DocDemo",{attrs:{markdown:e.demo2},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo2")]},proxy:!0}])},[t("p",[e._v("调用 "),t("code",[e._v("$confirm")]),e._v(" 方法即可打开消息提示，它模拟了系统的 "),t("code",[e._v("confirm")]),e._v("。Message Box 组件也拥有极高的定制性，我们可以传入 "),t("code",[e._v("options")]),e._v(" 作为第三个参数，它是一个字面量对象。"),t("code",[e._v("type")]),e._v(" 字段表明消息类型，可以为 "),t("code",[e._v("success")]),e._v("、"),t("code",[e._v("error")]),e._v("、"),t("code",[e._v("info")]),e._v(" 和 "),t("code",[e._v("warning")]),e._v("，无效的设置将会被忽略。注意，第二个参数 "),t("code",[e._v("title")]),e._v(" 必须定义为 "),t("code",[e._v("String")]),e._v(" 类型，如果是 "),t("code",[e._v("Objectt")]),e._v("，会被理解为 "),t("code",[e._v("options")]),e._v("。在这里我们用了 Promise 来处理后续响应。")])]),t("h3",[e._v("提交内容")]),t("p",[e._v("当用户进行操作时会被触发，中断用户操作，提示用户进行输入的对话框。")]),t("DocDemo",{attrs:{markdown:e.demo3},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo3")]},proxy:!0}])},[t("p",[e._v("调用 "),t("code",[e._v("$prompt")]),e._v(" 方法即可打开消息提示，它模拟了系统的 "),t("code",[e._v("prompt")]),e._v("。可以用 "),t("code",[e._v("inputPattern")]),e._v(" 字段自己规定匹配模式，或者用 "),t("code",[e._v("inputValidator")]),e._v(" 规定校验函数，可以返回 "),t("code",[e._v("Boolean")]),e._v(" 或 "),t("code",[e._v("String")]),e._v("，返回 "),t("code",[e._v("false")]),e._v(" 或字符串时均表示校验未通过，同时返回的字符串相当于定义了 "),t("code",[e._v("inputErrorMessage")]),e._v(" 字段。此外，可以用 "),t("code",[e._v("inputPlaceholder")]),e._v(" 字段来定义输入框的占位符。")])]),t("h3",[e._v("自定义")]),t("p",[e._v("可自定义配置不同内容。")]),t("DocDemo",{attrs:{markdown:e.demo4},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo4")]},proxy:!0}])},[t("p",[e._v("以上三个方法都是对 "),t("code",[e._v("$msgbox")]),e._v(" 方法的再包装。本例直接调用 "),t("code",[e._v("$msgbox")]),e._v(" 方法，使用了 "),t("code",[e._v("showCancelButton")]),e._v(" 字段，用于显示取消按钮。另外可使用 "),t("code",[e._v("cancelButtonClass")]),e._v(" 为其添加自定义样式，使用 "),t("code",[e._v("cancelButtonText")]),e._v(" 来自定义按钮文本（Confirm 按钮也具有相同的字段，在文末的字段说明中有完整的字段列表）。此例还使用了 "),t("code",[e._v("beforeClose")]),e._v(" 属性，它的值是一个方法，会在 MessageBox 的实例关闭前被调用，同时暂停实例的关闭。它有三个参数："),t("code",[e._v("action")]),e._v("、实例本身和 "),t("code",[e._v("done")]),e._v(" 方法。使用它能够在关闭前对实例进行一些操作，比如为确定按钮添加 "),t("code",[e._v("loading")]),e._v(" 状态等；此时若需要关闭实例，可以调用 "),t("code",[e._v("done")]),e._v(" 方法（若在 "),t("code",[e._v("beforeClose")]),e._v(" 中没有调用 "),t("code",[e._v("done")]),e._v("，则实例不会关闭）。")])]),t("div",{staticClass:"tip"},[t("p",[e._v("弹出层的内容可以是 "),t("code",[e._v("VNode")]),e._v("，所以我们能把一些自定义组件传入其中。每次弹出层打开后，Vue 会对新老 "),t("code",[e._v("VNode")]),e._v(" 节点进行比对，然后将根据比较结果进行最小单位地修改视图。这也许会造成弹出层内容区域的组件没有重新渲染，比如 "),t("a",{attrs:{href:"https://github.com/ElemeFE/element/issues/8931"}},[e._v("#8931")]),e._v("。当这类问题出现时，解决方案是给 "),t("code",[e._v("VNode")]),e._v(" 加上一个不相同的 key，参考"),t("a",{attrs:{href:"https://jsfiddle.net/zhiyang/ezmhq2ef/"}},[e._v("这里")]),e._v("。")])]),t("h3",[e._v("使用 HTML 片段")]),t("p",[t("code",[e._v("message")]),e._v(" 属性支持传入 HTML 片段。")]),t("DocDemo",{attrs:{markdown:e.demo5},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo5")]},proxy:!0}])},[t("p",[e._v("将 "),t("code",[e._v("dangerouslyUseHTMLString")]),e._v(" 属性设置为 true，"),t("code",[e._v("message")]),e._v(" 就将被当做 HTML 片段处理。")])]),t("div",{staticClass:"tip warning"},[t("p",[t("code",[e._v("message")]),e._v(" 属性虽然支持传入 HTML 片段，但是在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cross-site_scripting"}},[e._v("XSS 攻击")]),e._v("。因此在 "),t("code",[e._v("dangerouslyUseHTMLString")]),e._v(" 打开的情况下，请确保 "),t("code",[e._v("message")]),e._v(" 的内容是可信的，"),t("strong",[e._v("永远不要")]),e._v(" 将用户提交的内容赋值给 "),t("code",[e._v("message")]),e._v(" 属性。")])]),t("h3",[e._v("区分取消与关闭")]),t("p",[e._v("有些场景下，点击取消按钮与点击关闭按钮有着不同的含义。")]),t("DocDemo",{attrs:{markdown:e.demo6},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo6")]},proxy:!0}])},[t("p",[e._v("默认情况下，当用户触发取消（点击取消按钮）和触发关闭（点击关闭按钮或遮罩层、按下 ESC 键）时，Promise 的 reject 回调和 "),t("code",[e._v("callback")]),e._v(" 回调的参数均为 'cancel'。如果将 "),t("code",[e._v("distinguishCancelAndClose")]),e._v(" 属性设置为 true，则上述两种行为的参数分别为 'cancel' 和 'close'。")])]),t("h3",[e._v("居中布局")]),t("p",[e._v("内容支持居中布局。")]),t("DocDemo",{attrs:{markdown:e.demo7},scopedSlots:e._u([{key:"source",fn:function(){return[t("Demo7")]},proxy:!0}])},[t("p",[e._v("将 "),t("code",[e._v("center")]),e._v(" 设置为 "),t("code",[e._v("true")]),e._v(" 即可开启居中布局。")])]),t("h3",[e._v("全局方法")]),t("p",[e._v("如果你完整引入了 SecUI，它会为 Vue.prototype 添加如下全局方法：$msgbox，$alert，$confirm 和 $prompt。因此在 Vue instance 中可以采用本页面中的方式调用 "),t("code",[e._v("MessageBox")]),e._v("。调用参数为：")]),t("ul",[t("li",[t("code",[e._v("$msgbox(options)")])]),t("li",[t("code",[e._v("$alert(message, title, options)")]),e._v(" 或 "),t("code",[e._v("$alert(message, options)")])]),t("li",[t("code",[e._v("$confirm(message, title, options)")]),e._v(" 或 "),t("code",[e._v("$confirm(message, options)")])]),t("li",[t("code",[e._v("$prompt(message, title, options)")]),e._v(" 或 "),t("code",[e._v("$prompt(message, options)")])])]),t("h3",[e._v("单独引用")]),t("p",[e._v("如果单独引入 "),t("code",[e._v("MessageBox")]),e._v("：")]),t("markdown-it-vue",{attrs:{content:"```\n    import { MessageBox } from 'element-sec-ui';\n    "}}),t("p",[e._v("那么对应于上述四个全局方法的调用方法依次为：MessageBox, MessageBox.alert，MessageBox.confirm 和 MessageBox.prompt，调用参数与全局方法相同。")]),t("h3",[e._v("Options")]),t("sec-table",{staticClass:"doc-table",attrs:{data:e.options}},[t("sec-table-column",{attrs:{label:"参数",prop:"attr",width:"220"}}),t("sec-table-column",{attrs:{label:"说明"},scopedSlots:e._u([{key:"default",fn:function({row:n}){return[t("span",{domProps:{innerHTML:e._s(n.desc)}})]}}])}),t("sec-table-column",{attrs:{label:"类型",prop:"type",width:"260"}}),t("sec-table-column",{attrs:{label:"可选值",prop:"value",width:"130"}}),t("sec-table-column",{attrs:{label:"默认值",prop:"default",width:"240"}})],1)],1)},o=[],a=n(3722),c=n(8436),l=n.n(c),r=function(){var e=this,t=e._self._c;return t("sec-btn",{attrs:{type:"text"},on:{click:e.open}},[e._v("点击打开 Message Box")])},i=[],d={methods:{open(){this.$alert("这是一段内容","标题名称",{callback:e=>{this.$message.info(`action: ${e}`)}})}}},u=d,p=n(4940),v=(0,p.Z)(u,r,i,!1,null,null,null),_=v.exports,m=n(9884),f=n.n(m),g=function(){var e=this,t=e._self._c;return t("sec-btn",{attrs:{type:"text"},on:{click:e.open}},[e._v("点击打开 Message Box")])},h=[],x={methods:{open(){this.$confirm("此操作将永久删除该文件，是否继续？","提示",{type:"warning"}).then((()=>{this.$message.success("删除成功")})).catch((()=>{this.$message.info("已取消删除")}))}}},y=x,b=(0,p.Z)(y,g,h,!1,null,null,null),$=b.exports,B=n(62),M=n.n(B),w=function(){var e=this,t=e._self._c;return t("sec-btn",{attrs:{type:"text"},on:{click:e.open}},[e._v("点击打开 Message Box")])},k=[],C={methods:{open(){this.$prompt("请输入邮箱","提示",{inputPattern:/[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/,inputErrorMessage:"邮箱格式不正确"}).then((({value:e})=>{this.$message.success(`你的邮箱是：${e}`)})).catch((()=>{this.$message.info("取消输入")}))}}},D=C,T=(0,p.Z)(D,w,k,!1,null,null,null),S=T.exports,E=n(6798),L=n.n(E),H=function(){var e=this,t=e._self._c;return t("sec-btn",{attrs:{type:"text"},on:{click:e.open}},[e._v("点击打开 Message Box")])},P=[],V={methods:{open(){const e=this.$createElement;this.$msgbox({title:"消息",message:e("p",null,[e("span",null,"内容可以是 "),e("i",{style:"color: teal"},"VNode")]),showCancelButton:!0,beforeClose:(e,t,n)=>{"confirm"===e?(t.confirmButtonLoading=!0,t.confirmButtonText="执行中...",setTimeout((()=>{n(),setTimeout((()=>{t.confirmButtonLoading=!1}),300)}),3e3)):n()}}).then((e=>{this.$message.info(`action: ${e}`)})).catch((()=>{}))}}},Z=V,N=(0,p.Z)(Z,H,P,!1,null,null,null),U=N.exports,O=n(194),A=n.n(O),j=function(){var e=this,t=e._self._c;return t("sec-btn",{attrs:{type:"text"},on:{click:e.open}},[e._v("点击打开 Message Box")])},z=[],I={methods:{open(){this.$alert("<strong>这是 <i>HTML</i> 片段</strong>","HTML 片段",{dangerouslyUseHTMLString:!0})}}},q=I,F=(0,p.Z)(q,j,z,!1,null,null,null),X=F.exports,G=n(6536),J=n.n(G),K=function(){var e=this,t=e._self._c;return t("sec-btn",{attrs:{type:"text"},on:{click:e.open}},[e._v("点击打开 Message Box")])},Q=[],R={methods:{open(){this.$confirm("检测到未保存的内容，是否在离开页面前保存修改？","确认信息",{distinguishCancelAndClose:!0,confirmButtonText:"保存",cancelButtonText:"放弃修改"}).then((()=>{this.$message.info("保存修改")})).catch((e=>{this.$message.info("cancel"===e?"放弃保存并离开页面":"停留在当前页面")}))}}},W=R,Y=(0,p.Z)(W,K,Q,!1,null,null,null),ee=Y.exports,te=n(7586),ne=n.n(te),se=function(){var e=this,t=e._self._c;return t("sec-btn",{attrs:{type:"text"},on:{click:e.open}},[e._v("点击打开 Message Box")])},oe=[],ae={methods:{open(){this.$confirm("此操作将永久删除该文件，是否继续？","提示",{type:"warning",center:!0}).then((()=>{this.$message.success("删除成功")})).catch((()=>{this.$message.info("已取消删除")}))}}},ce=ae,le=(0,p.Z)(ce,se,oe,!1,null,null,null),re=le.exports,ie={components:{DocDemo:a.Z,Demo1:_,Demo2:$,Demo3:S,Demo4:U,Demo5:X,Demo6:ee,Demo7:re},data(){return{demo1:l(),demo2:f(),demo3:M(),demo4:L(),demo5:A(),demo6:J(),demo7:ne(),options:[{attr:"title",desc:"MessageBox 标题",type:"string",value:"—",default:"—"},{attr:"message",desc:"MessageBox 消息正文内容",type:"string / VNode",value:"—",default:"—"},{attr:"dangerouslyUseHTMLString",desc:"是否将 message 属性作为 HTML 片段处理",type:"boolean",value:"—",default:"false"},{attr:"type",desc:"消息类型，用于显示图标",type:"string",value:"success / info / warning / error",default:"—"},{attr:"iconClass",desc:"自定义图标的类名，会覆盖 <code>type</code>",type:"string",value:"—",default:"—"},{attr:"customClass",desc:"MessageBox 的自定义类名",type:"string",value:"—",default:"—"},{attr:"callback",desc:"若不是用 Promise，可以使用此参数指定 MessageBox 关闭后的回调",type:"function(action, instance)，action 的值为 'confirm'，'cancel' 或 'close'，instance 为 MessageBox 实例，可以通过它访问实例上的属性和方法",value:"—",default:"—"},{attr:"showClose",desc:"MessageBox 是否显示右上角关闭按钮",type:"boolean",value:"—",default:"true"},{attr:"beforeClose",desc:"MessageBox 关闭前的回调，会暂停实例的关闭",type:"function(action, instance, done)，action 的值为 'confirm'，'cancel' 或 'close'；instance 为 MessageBox 实例，可以通过它访问实例上的属性和方法；done 用于关闭 MessageBox 实例",value:"—",default:"—"},{attr:"distinguishCancelAndClose",desc:"是否将取消（点击取消按钮）与关闭（点击关闭按钮或遮罩层、按下 ESC 键）进行区分",type:"boolean",value:"—",default:"false"},{attr:"lockScroll",desc:"是否在 MessageBox 出现时将 body 滚动锁定",type:"boolean",value:"—",default:"true"},{attr:"showCancelButton",desc:"是否显示取消按钮",type:"boolean",value:"—",default:"false（以 confirm 和 prompt 方式调用时为 true）"},{attr:"showConfirmButton",desc:"是否显示确定按钮",type:"boolean",value:"—",default:"true"},{attr:"cancelButtonText",desc:"取消按钮的文本内容",type:"string",value:"—",default:"取消"},{attr:"confirmButtonText",desc:"确定按钮的文本内容",type:"string",value:"—",default:"确定"},{attr:"cancelButtonClass",desc:"取消按钮的自定义类名",type:"string",value:"—",default:"—"},{attr:"confirmButtonClass",desc:"确定按钮的自定义类名",type:"string",value:"—",default:"—"},{attr:"closeOnClickModal",desc:"是否可通过点击遮罩关闭 MessageBox",type:"boolean",value:"—",default:"true（以 alert 方式调用时为 false）"},{attr:"closeOnPressEscape",desc:"是否可通过按下 ESC 键关闭 MessageBox",type:"boolean",value:"—",default:"true（以 alert 方式调用时为 false）"},{attr:"closeOnHashChange",desc:"是否在 hashchange 时关闭 MessageBox",type:"boolean",value:"—",default:"true"},{attr:"showInput",desc:"是否显示输入框",type:"boolean",value:"—",default:"false（以 prompt 方式调用时为 true）"},{attr:"inputPlaceholder",desc:"输入框的占位符",type:"string",value:"—",default:"—"},{attr:"inputType",desc:"输入框的类型",type:"string",value:"—",default:"text"},{attr:"inputValue",desc:"输入框的初始文本",type:"string",value:"—",default:"—"},{attr:"inputPattern",desc:"输入框的校验表达式",type:"regexp",value:"—",default:"—"},{attr:"inputValidator",desc:"输入框的校验函数。可以返回布尔值或字符串，若返回一个字符串，则返回结果会被赋值给 inputErrorMessage",type:"function",value:"—",default:"—"},{attr:"inputErrorMessage",desc:"校验未通过时的提示文本",type:"string",value:"—",default:"输入的数据不合法!"},{attr:"center",desc:"是否居中布局",type:"boolean",value:"—",default:"false"},{attr:"roundButton",desc:"是否使用圆角按钮",type:"boolean",value:"—",default:"false"}]}}},de=ie,ue=(0,p.Z)(de,s,o,!1,null,null,null),pe=ue.exports}}]);
//# sourceMappingURL=2245.b93e73ee.js.map